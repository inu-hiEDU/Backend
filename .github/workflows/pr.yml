name: Other CI

on:
  pull_request:
    branches:
      - '**' # 모든 브랜치에 PR 올릴 때 실행

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      #       - name: Set up Node
      #         uses: actions/setup-node@v4
      #         with:
      #           node-version: '18'

      #       - name: Install Dependencies
      #         run: |
      #           npm install

      # - name: Run Tests and Generate Coverage
      #   run: |
      #       npm run test:cov

      # - name: Upload coverage to Codecov
      #   uses: codecov/codecov-action@v4
      #   with:
      #       token: ${{ secrets.CODECOV_TOKEN }}
      #       flags: unittests # optional
      #       name: codecov-coverage

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Dependencies
        run: |
          npm install
          npm install -g newman  # 또는 local이면 npm run test에서 실행되게 구성

      - name: Start App (background)
        run: |
          npm run start &  # 서버가 실행 중이어야 newman 테스트가 성공
          sleep 5          # 서버 부팅 대기 (필요 시 더 늘릴 수 있음)

      - name: Run Postman Tests with Newman
        run: |
          newman run newman.json --reporters cli,json \
          --reporter-json-export newman-report.json

      - name: Show build number
        run: |
          echo "Build Number: ${{ github.run_number }}"

      - name: Show pull request number
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          echo "PR Number: ${{ github.event.pull_request.number }}"

      - name: Set Docker Image Tag
        id: set_docker_image_tag
        env:
          PR_NUMBER: ${{ steps.get_pr_number.outputs.PR_NUMBER }}
        run: |
          DOCKER_IMAGE_TAG="0.${{ github.event.pull_request.number }}.${{ github.run_number }}-pre-dev"
          echo "Docker Image Tag: $DOCKER_IMAGE_TAG"
          echo "DOCKER_IMAGE_TAG"="${DOCKER_IMAGE_TAG}" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Build and push Docker image
        env:
          DOCKER_IMAGE_TAG: ${{ steps.set_docker_image_tag.outputs.DOCKER_IMAGE_TAG }}
        run: |
          docker buildx create --use
          docker buildx build \
            --platform linux/amd64 \
            --push \
            -t ${{ secrets.DOCKER_HUB_USERNAME }}/hiedu:$DOCKER_IMAGE_TAG .
